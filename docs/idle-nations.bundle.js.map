{"version":3,"sources":["webpack:///webpack/bootstrap 16c898cc7f01991bb642","webpack:///./src/client/app.js","webpack:///./src/shared/Nation.js","webpack:///./src/shared/Population.js","webpack:///./src/shared/Food.js","webpack:///./src/shared/Territory.js","webpack:///./src/client/ResourceView.js"],"names":["formatGameTime","gameTime","year","Math","floor","day","updateCurrentFigures","nation","document","querySelector","textContent","population","updateResourceView","food","territory","convertToGameTime","realTime","multiplier","startNation","window","addEventListener","startTime","Date","lastTick","realStartDate","toLocaleDateString","month","setInterval","thisTick","now","tickTime","getTime","tickLength","tickUpdate","restartButton","sPopulation","Symbol","sFood","sTerritory","Nation","config","updateBirthRate","updateDeathRate","updateGatheringRate","updateConsumptionRate","tickPopulationGrowth","min","tickFoodGrowth","sBirthRate","sDeathRate","sImmigrationRate","sEmmigrationRate","populationHunger","max","populationDensity","Number","POSITIVE_INFINITY","Population","startingPopulation","growthRate","birthRate","immigrationRate","deathRate","emmigrationRate","E","hunger","hFactor","log","density","dFactor","abs","fertility","sFactor","round","naturalGrowthRate","netImmigrationRate","sGatheringRate","sFarmingRate","sConsumptionRate","sImports","sExports","Food","startingFood","netGrowth","gatheringRate","farmingRate","consumptionRate","imports","exports","netProduction","netTrade","Territory","startingTerritory","ResourceView","value","precision","percent","container","model","baseKey","undefined","resourceField","fields","Array","from","querySelectorAll","i","iLen","length","field","key","getAttribute","formatAsPercent"],"mappings":"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","file":"idle-nations.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 16c898cc7f01991bb642","/**\n * Idle Nations behavior (testing)\n *\n * @copyright Bill Robitske, Jr. 2017\n * @author    Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license   MIT\n */\nimport Nation from '../shared/Nation';\nimport ResourceView from './ResourceView';\n\nfunction formatGameTime(gameTime) {\n  const year = Math.floor(gameTime);\n  const day = Math.floor((gameTime - year) * 365);\n  return `Day ${day} of Year ${year}`;\n}\n\nfunction updateCurrentFigures(gameTime, nation) { // eslint-disable-line\n  document.querySelector('#currentDate').textContent = gameTime;\n  const population = document.querySelector('[data-resource=\"population\"]');\n  ResourceView.updateResourceView(population, nation.population, 'population');\n  const food = document.querySelector('[data-resource=\"food\"]');\n  ResourceView.updateResourceView(food, nation.food, 'food');\n  const territory = document.querySelector('[data-resource=\"territory\"]');\n  ResourceView.updateResourceView(territory, nation.territory, 'territory');\n}\n\nfunction convertToGameTime(realTime = 0, multiplier = 1) {\n  return realTime / (1000 / multiplier);\n}\n\nfunction startNation() {\n  const nation = new Nation({\n    population: 10,\n    food: 10,\n    territory: 10,\n  });\n  updateCurrentFigures(formatGameTime(0), nation);\n  return nation;\n}\n\nwindow.addEventListener('load', () => {\n  const multiplier = 1;\n  let nation = startNation();\n  let startTime = new Date();\n  let lastTick = startTime;\n  const realStartDate = document.querySelector('#realStartDate');\n  realStartDate.textContent = startTime.toLocaleDateString('en', {\n    month: 'short',\n    day: 'numeric',\n    year: 'numeric',\n  });\n  setInterval(() => {\n    const thisTick = Date.now();\n    const tickTime = convertToGameTime(thisTick - startTime.getTime(), multiplier);\n    const tickLength = convertToGameTime(thisTick - lastTick, multiplier);\n    nation.tickUpdate(tickLength);\n    updateCurrentFigures(formatGameTime(tickTime), nation);\n    lastTick = thisTick;\n  }, 1000 / 60);\n  const restartButton = document.querySelector('.js-restart-button');\n  if (!restartButton) return;\n  restartButton.addEventListener('click', () => {\n    nation = startNation();\n    startTime = new Date();\n    lastTick = startTime;\n    realStartDate.textContent = startTime.toLocaleDateString('en', {\n      month: 'short',\n      day: 'numeric',\n      year: 'numeric',\n    });\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","/**\n * Nation module\n *\n * @module\n * @copyright Bill Robitske, Jr. 2017\n * @author    Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license   MIT\n */\nimport Population from './Population';\nimport Food from './Food';\nimport Territory from './Territory';\n\n/**\n * Symbols for \"private\" properties\n */\nconst sPopulation = Symbol('population');\nconst sFood = Symbol('food');\nconst sTerritory = Symbol('territory');\n\n/**\n * Nation encapsulation\n * @class\n */\nexport default class Nation {\n\n  /**\n   * Creates a new nation model\n   * @constructor\n   * @param   {Object}  config\n   * @param   {Number}  config.population Starting population\n   * @param   {Number}  config.food       Starting food\n   * @return  {Nation}  Newly created nation\n   */\n  constructor(config = {}) {\n    this[sPopulation] = new Population(config.population || 10);\n    this[sFood] = new Food(config.food || 10);\n    this[sTerritory] = new Territory(config.territory || 10);\n  }\n\n  /**\n   * This nation's population model\n   * @member  {Population}\n   */\n  get population() {\n    return this[sPopulation];\n  }\n\n  /**\n   * This nation's food model\n   * @member  {Food}\n   */\n  get food() {\n    return this[sFood];\n  }\n\n  /**\n   * This nation's territory model\n   * @member  {Territory}\n   */\n  get territory() {\n    return this[sTerritory];\n  }\n\n  /**\n   * Updates this nation's population, food, etc. models\n   * @param   {Number}  tickLength  In-game years to progress in this tick\n   * @return  {Nation}  This nation\n   */\n  tickUpdate(tickLength = 1) {\n    this.population\n      .updateBirthRate(this.food.food, this.territory.territory)\n      .updateDeathRate(this.food.food, this.territory.territory);\n    this.food\n      .updateGatheringRate(this.population.population, this.territory.territory)\n      .updateConsumptionRate(this.population.population);\n    if (tickLength > 1) {\n      this.tickUpdate(tickLength - 1);\n    }\n    this.population.tickPopulationGrowth(Math.min(tickLength, 1));\n    this.food.tickFoodGrowth(Math.min(tickLength, 1));\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Nation.js","/**\n * Population module\n *\n * @module\n * @copyright Bill Robitske, Jr. 2017\n * @author    Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license   MIT\n */\n\n/**\n * Symbols for private data\n */\nconst sPopulation = Symbol('population');\nconst sBirthRate = Symbol('birthRate');\nconst sDeathRate = Symbol('deathRate');\nconst sImmigrationRate = Symbol('immigrationRate');\nconst sEmmigrationRate = Symbol('emmigrationRate');\n\n/**\n * Calculates the percentage of a population that is going hungry\n *\n * @private\n * @param   {Number}  population  Total population\n * @param   {Number}  food        Total food\n * @return  {Number}  Percentage of the population going hungry\n */\nfunction populationHunger(population = 1, food = 0) {\n  return population > 0 ? Math.max(population - food, 0) / population : 0;\n}\n\n/**\n * Calculates the population density\n *\n * @private\n * @param   {Number}  population  Total population\n * @param   {Number}  territory   Total territory\n * @return  {Number}  Population density\n */\nfunction populationDensity(population = 0, territory = 1) {\n  return territory > 0 ? population / territory : Number.POSITIVE_INFINITY;\n}\n\n/**\n * Population encapsulation\n *\n * @class\n */\nexport default class Population {\n  constructor(startingPopulation = 1) {\n    this[sPopulation] = startingPopulation;\n    this[sBirthRate] = 0;\n    this[sDeathRate] = 0;\n    this[sImmigrationRate] = 0;\n    this[sEmmigrationRate] = 0;\n  }\n\n  /**\n   * Retrieve the current population\n   *\n   * @return  {Number}      Current population\n   */\n  get population() {\n    return Math.round(this[sPopulation]);\n  }\n\n  /**\n   * Retrive the current birth rate\n   *\n   * @return  {Number}      Current birth rate\n   */\n  get birthRate() {\n    return this[sBirthRate];\n  }\n\n  /**\n   * Retrieve the current death rate\n   *\n   * @return  {Number}      Current death rate\n   */\n  get deathRate() {\n    return this[sDeathRate];\n  }\n\n  /**\n   * Current natural population growth rate\n   * @member  {Number}\n   */\n  get naturalGrowthRate() {\n    return this.birthRate - this.deathRate;\n  }\n\n  /**\n   * Retrieve current immigration rate\n   *\n   * @return  {Number}      Current immigration rate\n   */\n  get immigrationRate() {\n    return this[sImmigrationRate];\n  }\n\n  /**\n   * Retrieve current emmigration rate\n   *\n   * @return  {Number}      Current emmigration rate\n   */\n  get emmigrationRate() {\n    return this[sEmmigrationRate];\n  }\n\n  /**\n   * Current net immigration rate\n   * @member  {Number}\n   */\n  get netImmigrationRate() {\n    return this.immigrationRate - this.emmigrationRate;\n  }\n\n  /**\n   * Current net population growth rate\n   * @member  {Number}\n   */\n  get netGrowthRate() {\n    return this.naturalGrowthRate + this.netImmigrationRate;\n  }\n\n  /**\n   * Updates the current population based on the current birth rate, death rate,\n   * immigration rate, and emmigration rate.\n   *\n   * @param   {Number}      tickLength  Length of the tick (in \"years\")\n   * @return  {Population}  This population encapsulation\n   */\n  tickPopulationGrowth(tickLength) {\n    const growthRate = (this.birthRate + this.immigrationRate) -\n      (this.deathRate + this.emmigrationRate);\n    this[sPopulation] *= Math.E ** (growthRate * tickLength);\n    return this;\n  }\n\n  /**\n   * Updates the current birth rate based on the current population, food, and\n   * territory.\n   *\n   * @param   {Number}      food        Current food\n   * @param   {Number}      territory   Current territory\n   * @return  {Population}  This population encapsulation\n   */\n  updateBirthRate(food = 1, territory = 1) {\n    const hunger = populationHunger(this.population, food);\n    const hFactor = (Math.log(1 + ((Math.E - 1) * hunger)) * 2) + 1;\n    const density = populationDensity(this.population, territory);\n    const dFactor = 1 - Math.abs(Math.log((Math.E ** -3) +\n      ((Math.E - (Math.E ** -3)) * (density / 35))));\n    // const dFactor = density > 0 ? Math.log(1 + ((Math.E - 1) * (density / 35))) : 1;\n    const fertility = (2 * hFactor) + dFactor;\n    this[sBirthRate] = fertility / 45;\n    return this;\n  }\n\n  /**\n   * Updates the current death rate based on the current population, food, and\n   * territory.\n   *\n   * @param   {Number}      food        Current food\n   * @param   {Number}      territory   Current territory\n   * @return  {Population}  This population encapsulation\n   */\n  updateDeathRate(food = 1, territory = 1) {\n    const hunger = populationHunger(this.population, food);\n    const hFactor = hunger ** 2;\n    const density = populationDensity(this.population, territory);\n    const sFactor = 0.00001326 - (Math.log(1 + ((Math.E - 1) * (density / 777))) * 0.00001326);\n    this[sDeathRate] = (1 / 70) + hFactor + sFactor;\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Population.js","/**\n * Food module\n *\n * @module\n * @copyright Bill Robitske, Jr. 2017\n * @author    Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license   MIT\n */\n\n/**\n * Symbols for \"private\" properties\n */\nconst sFood = Symbol('food');\nconst sGatheringRate = Symbol('gatheringRate');\nconst sFarmingRate = Symbol('farmingRate');\nconst sConsumptionRate = Symbol('consumptionRate');\nconst sImports = Symbol('imports');\nconst sExports = Symbol('exports');\n\n/**\n * Food encapsulation\n * @class\n */\nexport default class Food {\n\n  /**\n   * Creates a new food model\n   * @constructor\n   * @param   {Number}  startingFood  Starting food\n   * @return  {Food}    Newly created food model\n   */\n  constructor(startingFood = 1) {\n    this[sFood] = startingFood;\n    this[sGatheringRate] = 0;\n    this[sFarmingRate] = 0;\n    this[sConsumptionRate] = 0;\n    this[sImports] = 0;\n    this[sExports] = 0;\n  }\n\n  /**\n   * Total food\n   * @member  {Number}\n   */\n  get food() {\n    return Math.round(this[sFood]);\n  }\n\n  get gatheringRate() {\n    return this[sGatheringRate];\n  }\n\n  get farmingRate() {\n    return this[sFarmingRate];\n  }\n\n  get consumptionRate() {\n    return this[sConsumptionRate];\n  }\n\n  get netProduction() {\n    return (this.gatheringRate + this.farmingRate) - this.consumptionRate;\n  }\n\n  get imports() {\n    return this[sImports];\n  }\n\n  get exports() {\n    return this[sExports];\n  }\n\n  get netTrade() {\n    return this.imports - this.exports;\n  }\n\n  get netGrowth() {\n    return this.netProduction + this.netTrade;\n  }\n\n  updateGatheringRate(population = 0, territory = 0) {\n    this[sGatheringRate] = Math.min(territory ** (4 / 3), population * 2);\n    return this;\n  }\n\n  updateConsumptionRate(population = 0) {\n    this[sConsumptionRate] = Math.max(population, 0);\n    return this;\n  }\n\n  tickFoodGrowth(tickLength = 0) {\n    this[sFood] = Math.max(this[sFood] + (this.netGrowth * tickLength), 0);\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Food.js","/**\n * Territory module\n *\n * @module\n * @copyright Bill Robitske, Jr. 2017\n * @author    Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license   MIT\n */\n\n/**\n * Symbols for \"private\" properties\n */\nconst sTerritory = Symbol('territory');\n\n/**\n * Territory encapsulation\n * @class\n */\nexport default class Territory {\n\n  /**\n   * Creates a new territory model\n   * @constructor\n   * @param   {Number}    startingTerritory Starting territory\n   * @return  {Territory} Newly created territory\n   */\n  constructor(startingTerritory = 1) {\n    this[sTerritory] = startingTerritory;\n  }\n\n  /**\n   * Current ammount of territory\n   * @member  {Number}\n   */\n  get territory() {\n    return Math.round(this[sTerritory]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Territory.js","/**\n * Resource view module\n *\n * @module\n * @copyright Bill Robitske, Jr. 2017\n * @author    Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license   MIT\n */\nexport default class ResourceView {\n\n  /**\n   * Formats a number as a percent\n   * @static\n   * @param   {Number}  value       Value to be formatted\n   * @param   {Number}  precision   Decimal places to round the percent to\n   * @return  {String}  Formatted percent\n   */\n  static formatAsPercent(value = 0, precision = 0) {\n    const percent = Math.round(value * (10 ** (2 + precision))) / (10 ** precision);\n    return `${percent}%`;\n  }\n\n  static updateResourceView(container = null, model = null, baseKey = '') {\n    if (!container || !model || baseKey === '' || model[baseKey] === undefined) return;\n    const resourceField = container.querySelector('[data-form=\"resource\"]');\n    if (!resourceField) return;\n    resourceField.textContent = model[baseKey];\n    // const rateFields = Array.from(container.querySelectorAll('[data-form=\"rate\"]'));\n    // for (let i = 0, iLen = rateFields.length; i < iLen; i += 1) {\n    //   const key = rateFields[i].getAttribute('data-value');\n    //   rateFields[i].textContent = model[key] !== undefined ?\n    //     ResourceView.formatAsPercent(model[key], 3) : '-';\n    // }\n    // const absoluteFields = Array.from(container.querySelectorAll('[data-form=\"absolute\"]'));\n    // for (let i = 0, iLen = absoluteFields.length; i < iLen; i += 1) {\n    //   const key = absoluteFields[i].getAttribute('data-value');\n    //   absoluteFields[i].textContent = model[key] !== undefined ?\n    //     Math.round(model[baseKey] * model[key]) : '-';\n    // }\n    const fields = Array.from(container.querySelectorAll('[data-value]'));\n    for (let i = 0, iLen = fields.length; i < iLen; i += 1) {\n      const field = fields[i];\n      const key = field.getAttribute('data-value');\n      if (model[key] === undefined) {\n        field.textContent = '-';\n      } else {\n        switch (field.getAttribute('data-form')) {\n          case 'rate':\n            field.textContent = ResourceView.formatAsPercent(model[key], 3);\n            break;\n          case 'absolute':\n            field.textContent = Math.round(model[baseKey] * model[key]);\n            break;\n          case 'value':\n            field.textContent = Math.round(model[key]);\n            break;\n          case 'percentOfResource':\n            field.textContent = ResourceView.formatAsPercent(model[key] / model[baseKey], 3);\n            break;\n          default:\n            field.textContent = model[key];\n        }\n      }\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/ResourceView.js"],"sourceRoot":""}