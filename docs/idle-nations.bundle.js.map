{"version":3,"sources":["webpack:///webpack/bootstrap 413478c8599a4e35c1d2","webpack:///./src/client/app.js","webpack:///./src/shared/Population.js"],"names":["formatPercent","number","decimals","Math","round","updateCurrentFigures","gameTime","population","food","territory","document","querySelector","textContent","birthRate","deathRate","getValue","id","value","Number","parseInt","isNaN","convertToGameTime","realTime","multiplier","formatGameTime","years","floor","weeks","window","addEventListener","startTime","Date","now","lastTick","setInterval","thisTick","tickTime","tickLength","updateBirthRate","updateDeathRate","tickPopulationGrowth","sPopulation","Symbol","sBirthRate","sDeathRate","sImmigrationRate","sEmmigrationRate","populationHunger","max","populationDensity","POSITIVE_INFINITY","Population","startingPopulation","growthRate","immigrationRate","emmigrationRate","E","hunger","density","dFactor","log","baseRate","min","sFactor"],"mappings":"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","file":"idle-nations.bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 413478c8599a4e35c1d2","/**\n * Idle Nations behavior (testing)\n *\n * @copyright Bill Robitske, Jr. 2017\n * @author    Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license   MIT\n */\nimport Population from '../shared/Population';\n\nfunction formatPercent(number = 0, decimals = 2) {\n  return `${Math.round(number * 100 * (10 ** decimals)) / (10 ** decimals)}%`;\n}\n\nfunction updateCurrentFigures(gameTime, population, food, territory) {\n  document.querySelector('#gameTime').textContent = `${gameTime}`;\n  document.querySelector('#currentPopulation').textContent = `${population.population}`;\n  document.querySelector('#currentFood').textContent = `${food}`;\n  document.querySelector('#currentTerritory').textContent = `${territory}`;\n  document.querySelector('#currentBirthRate').textContent = `${formatPercent(population.birthRate)}`;\n  document.querySelector('#currentDeathRate').textContent = `${formatPercent(population.deathRate)}`;\n}\n\nfunction getValue(id) {\n  const value = Number.parseInt(document.querySelector(id).value, 10);\n  return Number.isNaN(value) ? 0 : value;\n}\n\nfunction convertToGameTime(realTime = 0, multiplier = 1) {\n  return realTime / (1000 / multiplier);\n}\n\nfunction formatGameTime(gameTime) {\n  const years = Math.floor(gameTime);\n  const weeks = Math.floor((gameTime - years) * 52);\n  return `Year ${years}, Week ${weeks}`;\n}\n\nwindow.addEventListener('load', () => {\n  const multiplier = 1;\n\n  let population = new Population(getValue('#startingPopulation'));\n  let food = getValue('#food');\n  let territory = getValue('#territory');\n  let startTime = Date.now();\n  let lastTick = startTime;\n  updateCurrentFigures(formatGameTime(0), population, food, territory);\n  setInterval(() => {\n    food = getValue('#food');\n    territory = getValue('#territory');\n    const thisTick = Date.now();\n    const tickTime = convertToGameTime(thisTick - startTime, multiplier);\n    const tickLength = convertToGameTime(thisTick - lastTick, multiplier);\n    population\n      .updateBirthRate(food, territory)\n      .updateDeathRate(food, territory)\n      .tickPopulationGrowth(tickLength);\n    updateCurrentFigures(formatGameTime(tickTime), population, food, territory);\n    lastTick = thisTick;\n  }, 1000 / 60);\n  document.querySelector('#restartButton').addEventListener('click', () => {\n    population = new Population(getValue('#startingPopulation'));\n    startTime = Date.now();\n    lastTick = startTime;\n    updateCurrentFigures(formatGameTime(0), population, food, territory);\n  });\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/client/app.js","/**\n * Population module\n *\n * @module\n * @copyright Bill Robitske, Jr. 2017\n * @author    Bill Robitske, Jr. <bill.robitske.jr@gmail.com>\n * @license   MIT\n */\n\n/**\n * Symbols for private data\n */\nconst sPopulation = Symbol('population');\nconst sBirthRate = Symbol('birthRate');\nconst sDeathRate = Symbol('deathRate');\nconst sImmigrationRate = Symbol('immigrationRate');\nconst sEmmigrationRate = Symbol('emmigrationRate');\n\nfunction populationHunger(population = 1, food = 0) {\n  return population > 0 ? Math.max(population - food, 0) / population : 0;\n}\n\nfunction populationDensity(population = 0, territory = 1) {\n  return territory > 0 ? population / territory : Number.POSITIVE_INFINITY;\n}\n\n/**\n * Population encapsulation\n *\n * @class\n */\nexport default class Population {\n  constructor(startingPopulation = 1) {\n    this[sPopulation] = startingPopulation;\n    this[sBirthRate] = 0;\n    this[sDeathRate] = 0;\n    this[sImmigrationRate] = 0;\n    this[sEmmigrationRate] = 0;\n  }\n\n  /**\n   * Retrieve the current population\n   *\n   * @return  {Number}      Current population\n   */\n  get population() {\n    return Math.round(this[sPopulation]);\n  }\n\n  /**\n   * Retrive the current birth rate\n   *\n   * @return  {Number}      Current birth rate\n   */\n  get birthRate() {\n    return this[sBirthRate];\n  }\n\n  /**\n   * Retrieve the current death rate\n   *\n   * @return  {Number}      Current death rate\n   */\n  get deathRate() {\n    return this[sDeathRate];\n  }\n\n  /**\n   * Retrieve current immigration rate\n   *\n   * @return  {Number}      Current immigration rate\n   */\n  get immigrationRate() {\n    return this[sImmigrationRate];\n  }\n\n  /**\n   * Retrieve current emmigration rate\n   *\n   * @return  {Number}      Current emmigration rate\n   */\n  get emmigrationRate() {\n    return this[sEmmigrationRate];\n  }\n\n  /**\n   * Updates the current population based on the current birth rate, death rate,\n   * immigration rate, and emmigration rate.\n   *\n   * @param   {Number}      tickLength  Length of the tick (in \"years\")\n   * @return  {Population}  This population encapsulation\n   */\n  tickPopulationGrowth(tickLength) {\n    const growthRate = (this.birthRate + this.immigrationRate) -\n      (this.deathRate + this.emmigrationRate);\n    this[sPopulation] *= Math.E ** (growthRate * tickLength);\n    return this;\n  }\n\n  /**\n   * Updates the current birth rate based on the current population, food, and\n   * territory.\n   *\n   * @param   {Number}      food        Current food\n   * @param   {Number}      territory   Current territory\n   * @return  {Population}  This population encapsulation\n   */\n  updateBirthRate(food = 1, territory = 1) {\n    const hunger = populationHunger(this.population, food);\n    const density = populationDensity(this.population, territory);\n    const dFactor = density > 0 ? Math.log(1 + ((Math.E - 1) * (density / 35))) : 1;\n    const baseRate = ((1 + hunger) / 20);\n    this[sBirthRate] = Math.min(baseRate, 2) * dFactor;\n    return this;\n  }\n\n  /**\n   * Updates the current death rate based on the current population, food, and\n   * territory.\n   *\n   * @param   {Number}      food        Current food\n   * @param   {Number}      territory   Current territory\n   * @return  {Population}  This population encapsulation\n   */\n  updateDeathRate(food = 1, territory = 1) {\n    // const hunger = 1 / Math.min((this.population - food) / this.population, 1);\n    // const suicide = Math.min(1 / Math.log((this.population / (1 + territory)) / 777), 1);\n    const hunger = populationHunger(this.population, food);\n    const density = populationDensity(this.population, territory);\n    const sFactor = Math.max(density > 0 ? 1 - Math.log(1 + ((Math.E - 1) * (density / 777))) : 1,\n      0) * 0.00001326;\n    this[sDeathRate] = ((1 / (70 * (1 - hunger))) + sFactor);\n    return this;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/Population.js"],"sourceRoot":""}